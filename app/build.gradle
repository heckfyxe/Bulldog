apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: '../versions.gradle'

def getProperty(String filename, String propName) {
    def propsFile = rootProject.file(filename)
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        if (props[propName] != null) {
            return props[propName]
        } else {
            print("No such property " + propName + " in file " + filename)
        }
    } else {
        print(filename + " does not exist!")
    }
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "com.heckfyxe.bulldog"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "API_KEY", "\"${getProperty("local.properties", "api_key")}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    androidExtensions {
        experimental = true
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    // Kotlin + Coroutines
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin_version"

    // AndroidX
    implementation "androidx.core:core-ktx:$versions.core_version"
    implementation "androidx.appcompat:appcompat:$versions.appcompat_version"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraint_version"

    // Testing
    testImplementation "junit:junit:$versions.junit_version"
    androidTestImplementation "androidx.test.ext:junit:$versions.android_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso_version"

    // Agora SDK
    implementation "io.agora.rtc:voice-sdk:$versions.agora_version"

    // Permissions
    implementation "com.github.fondesa:kpermissions:$versions.kpermissions_version"

    // ViewModel + Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle_version"
}